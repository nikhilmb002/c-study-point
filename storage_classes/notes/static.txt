Static
------
We can declare a static variable local as well as global.

Default value of a static variable is 0.

#include<stdio.h>

static int i = 20;

int main(){

	static int i = 10;

	printf("i = %d\n", i);
}

If we declare a static variable global as well as local with same name, local is the higher priority.

In c language, there is no direct way to access global variable, if local variable is present with same name. But in C++ There is one operator :: called scope resolution operator with this we can access the global, if local is present with same name. Static variables are stored in data segment.


static int i; // is stored in uninitialized data segment also called as BSS (Block started by symbols)

static int i = 10;  // which is stored in initialized data segment (normally called as data segment)



Scope
-----
If we declare a global static we can access that variable in the entire file. If we declare a local static we can access in that function itself.


The life of static variable starts when the program is loaded into the RAM for execution and life ends when the program execution ends.

For a static variable reinitialisation willn't happen.



































