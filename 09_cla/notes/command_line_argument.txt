Command Line Argument
---------------------

command line argument is a concept where we can supply input to our program at load time. Every program will take the input and process that input and gives the output.

We can supply input to our program in 3 different timings

	1. compile time -> fixed input

	2. Run time

	3. Load time

	compile time input is os friendly because our program will comeout of RAM immediately without any blocklog. 

	run time input is user friendly because user has choice to give the input by using sacnf.

	load time input user as well as os freindly.



In Linux, command prompt for all the commands we used to supply the input at loadtime 
	
	eg : cd Desktop

	here providing the directory name while loading the program into the RAM for execution.

C language supports load time input with the help of commandline argument concept.


If we want to write a program for a load time input main function prototype should be changed.


main is having 3 different prototypes
-------------------------------------

int main(){



}

int main(int argc, char **argv){



}

int main(int argc){


}




main is not pure predefined function and also not pure user defined function.

with respect to declaration main is predefined, but with respect to defnition main is a user defined function.



#include<stdio.h>

int main(int argc, char **argv){

	printf("argc = %d\n", argc);
}	

argc holds no.of arguments, we are passing through command line including name of the executable file.


	eg : ./a.out 	// argc = 1

	     ./a.out abc 	// argc = 2

	     ./a.out abc def 	// argc = 3

	     ./.a.out abc def 10 23.5 	// argc = 5


	what ever the input we are supplying through command line every input is space seperated.

argv holds base addresses of array of pointers where each pointer is pointing to the commandline input and last null pointer is present.


* All the command line arguments present above main function stack frame.

* whatever the data we are supply through commandline those are treated as strings.








































