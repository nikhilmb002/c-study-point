		 					Pointers
						`	--------

pointer is one of the secondary derived datatype which holds address of another variable through which we can access the data indirectly.



syntax to declare pointer : 

			  datatype* variable_name;

example : 

	int* p;     -> integer pointer variable
	
	char *p;    -> character pointer varaible

	float * p;  -> float pointer variable



If a pointer is holding an unknown address or garbage address, such pointers are called as wild pointers.

size of pointer is system dependent.

If os is 64  bit size of pointer is 64 bit. 

Irrespective of type of a pointer size of the pointer variable is fixed.

Pointer holds address, addresses are generated by os.

If os is 64 bit pointer size is 8 bytes, if os is 32 bit pointer size is 4 bytes.



Pointer initialization
----------------------

syntax : 

	datatype * variable_name = address;

example: 

	int *p = &i;


Use of const on pointer 
-----------------------

int i = 10;

int *p;

p = &i;        -> error

*p = 30;       -> no error


-----------------------------------




int i = 10;

const int *p; //read only pointer

p = &i;        -> no error

*p = 20;       -> error



-------------------------------------




int i = 10;

int * const p; -> constant pointer

p = &i;        -> error

*p = 20;       -> no error


constant pointer must initialized, otherwise no use in program


--------------------------------------



int i = 10;

const int * const p;

p = &i;       -> error 

*p = 20;      -> error

read only constant pointer 


-------------------------------------



size of character pointer        ->   8 bytes

when dereferencing char pointer only 1 byte get fetched.

when we increment char pointer 1 byte get incremented.



size of integer pointer          ->   4 bytes

when dereferencing int pointer 4 bytes get fetched.

when we increment int pointer 4 bytes get incremented.




Void pointer (Generic pointer)
------------------------------

pointer that have no datatype associated with them.

void pointer should be explicitly type casted while dereferencing it.


Null Pointer
------------

if pointer is holding 0 as an address, such pointers are called as null pointers.

to avoid wild pointer make the pointer as null pointer.

to avoid dangling pointer make the pointer as null pointer.

null pointer is not a seperator pointer like character pointer, int pointer, float pointer.


two rules need to follow while doing with pointers


1. don't directly dereference pointer

2. check the pointer is null or not

	if pointer is null meaning it is not pointing to valid location.

	once our work is finished with the pointer, make the pointer as null pointer.



