C is a high-level, procedural-oriented programing language developed by Dennis Ritchie at Bell Laboratories in 1972. Originally crafted for the programing of the unix operating system. C programs are known for their speed and efficiency, making it a preffered language for perfomance-critical applications.


Basic Structure of C Program
----------------------------


// header file inclusion 

#include<stdio.h> // include standard input / output library

// global variables

int globalVariable = 10; // Example of a global variable

// user defined function

void myFunction(){

	//function logic
	
}

int main(void) // main function

{
	int n = 5;  //example of local variables

	//logic

	//call the user-defined function

	
	myFunction();

	//return statement

	return 0;

}




what headerfile contains ?

	headerfile contains predefined function declarations


As per the programing standard before calling any function, it should be decalared.


what is the main ?

	it is a function 


why main ?

	our program may contain multiple function, so main is a function where program execution begins.


is it possible to write a c program without main function?

	yes, if the compiler supports.


can we write a c program without any function?

	no.



							Compilation Stages
							------------------

1. preprocessor (.c to .i)

	* include header files

	* it will remove the commands

	* macro replacement

	* conditional compilation 

	* command for preprocessor  : cc -E program_name.c -o program_name.i

2. Translator (.i to .s)

	* will check the syntax error

	* convert the c code in to assembly

	* command for translator    : cc -S program_name.c -o program_name.s

3. Assembler (.s to o)

	* convert assembly code into opcodes

	* .o is the object file

	* command for assembler     : cc -C program_name.c -o program_name.o

4. Linker (.o to .out)

	* links with the libraries and it will add os info, it will create an executable file





	cc -S program_name.c 

		with this command we are informing to the compiler start compilation after translator...

	cc -C program_name.c

		with this command we are informing to the compiler start compilation after assembler....


What is the difference between object file and executable file 


* after assembler we will get object file

* after linker we will get executable file

* both files are binary files

* object file contains only the c program

* executable file contains c program + library information + os information 

* object file size is less, executable file size is more



Errors in c program
-------------------

compile time errors (generated by compiler)

* preprocessor error

* translator error

* linker error



runtime error (generated by os)

* segmentation fault

* bus error

* floating point exception error



without declaring a function, if we call that function what happens ?

	translator generates warning


without defining the function, if you call the function what happens ?

	linker generated error


where the linker search function defnitions ?

	1. in the same source code

	2. in  a library




Runtime error
------------- 

1. segmentation fault is also called as unauthorised memory access is also called unreserved memory access.

	scanf("%d", n);

	when we are scanning the data using scanf function we need to use proper format specifier and proper address location.

	proper usage :  	scanf("%d", &n);

2. bus error

	if memory is present but it is not reserved for our program then we will get segmentation fault.

	But memory is not at all there and we are trying to access that memory then bus error.

	Bus error is hardware generated error.

3. floating point exception 

	floating point exception is also called ad divide with 0.





-------------------------------------------------------------------------------------------------------------------------------------------------------------







